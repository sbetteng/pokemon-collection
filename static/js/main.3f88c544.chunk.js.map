{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["PokemonList","props","state","items","count","isLoading","fetch","then","res","json","setState","isLoaded","results","length","this","setCount","Container","className","Row","map","Col","Card","style","width","Img","variant","src","process","padding","Body","Title","name","Button","size","id","Component","DetailPokemon","match","params","MyPokemon","DetailMyPokemon","App","to","alt","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f88c544.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.scss';\nimport { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Container, Row, Col, Button, Card, Pagination } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass PokemonList extends Component {\n  constructor(props) { \n    super(props)\n    this.state = {\n      items: [],\n      count: 0,\n      isLoading: true\n    }\n  }\n\n  // API\n  componentDidMount() {\n    fetch(\"https://pokeapi.co/api/v2/pokemon?limit=100&offset=200\")\n    // fetch(\"https://pokeapi.co/api/v2/pokemon\")\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          isLoaded: true,\n          items: res.results,\n          count: res.results.length,\n          isLoading: false\n        });\n      });\n  }\n  \n  render() {\n    const { items, isLoading, count, setCount } = this.state\n    if (isLoading) { \n      return <p>Loading.....</p>\n    }\n    return (\n      <div>\n        <h1>Pokemon Collection</h1>\n        <h3>All Pokemon ({count})</h3>\n        <Container>\n          <div className=\"wrap-card\">\n          {/* <Pagination size=\"lg\">{items}</Pagination> <br /> */}\n          <Row className=\"justify-content-lg-center\">\n            {items.map(results => (\n                // <li key={results.id}> Name : {results.name}</li>\n              \n            <Col>\n              <Card key={results.id} style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/pokemon-ball.png\"} style={{ padding: '40px' }}/>\n                <Card.Body>\n                  <Card.Title>{results.name}</Card.Title>\n                  {/* <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                  </Card.Text> */}\n                  <Button variant=\"info\" size=\"md\">Detail</Button>\n                </Card.Body>\n              </Card>\n              </Col>\n              \n              ))}\n          </Row>\n          </div>\n        </Container>\n      </div>\n\n    )\n  }  \n}\nfunction DetailPokemon({ match }) { \n  return (\n    <h1>ini Halaman { match.params.id }</h1>\n  ) \n}\n\nfunction MyPokemon() { \n  return (\n    <div>\n      <h1>My Pokemon Collection</h1>\n      <h3>Owned Pokemon (123)</h3>\n    </div>\n\n  ) \n}\n\nfunction DetailMyPokemon({ match }) { \n  return <h1>ini Halaman { match.params.name }</h1>\n}\n\n// function NotFound() { \n//   return <h1>404, Halaman Tidak ditemukan</h1>\n// }\n\nclass App extends Component {\n\n  render() {\n    \n    return (\n      <BrowserRouter>\n        {/* <div>\n          <ul>\n            {items.map(results => (\n              <li key={results.id}> Name : {results.name}</li>\n            ))}\n          </ul>\n        </div> */}\n\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Link to={'/pokemon-collection'}>\n              <img src={process.env.PUBLIC_URL + \"/images/pokemon-collection-logo.png\"} className=\"logo-pokemon\" alt=\"logo-pokemon\" />\n            </Link>\n            \n            <img src={process.env.PUBLIC_URL + \"/images/pokemon-collection-images.png\"} className=\"images-pokemon\" alt=\"images-pokemon\" />\n            <Container>\n              <Row>\n                <Col >\n                  <div className=\"wrap-button\">\n                    <Link to='/pokemon-list'>\n                      <Button variant=\"info\" size=\"lg\">Pokemon Collection</Button>{' '}\n                    </Link>\n                    <Link to='/my-pokemon-list'>\n                      <Button variant=\"info\" size=\"lg\">My Pokemon Collection</Button>{' '}\n                    </Link>\n                  </div>\n                </Col>\n              </Row>\n              \n              <main>\n                <Switch>\n                  <Route path='/pokemon-collection' exact />\n                  <Route path='/pokemon-list' exact component={PokemonList} />\n                  <Route path='/pokemon-list/:id' exact component={DetailPokemon} />\n                  <Route path='/my-pokemon-list' exact component={MyPokemon} />\n                  <Route path='/my-pokemon-list/:id' exact component={DetailMyPokemon} />\n                  {/* <Route component={NotFound} /> */}\n                </Switch>\n              </main>\n              \n            </Container>\n          </header>\n        </div>\n      \n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}